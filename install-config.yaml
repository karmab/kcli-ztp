{% set cluster_network_ipv6 = {"cidr": cluster_network_ipv6, "hostPrefix": 64} %}
{% set cluster_network_ipv4 = {"cidr": cluster_network_ipv4, "hostPrefix": 23} %}
{% set baremetal_cidrs = [baremetal_cidr] %}
{% if dualstack|default(False) %}
{% set cluster_networks = [cluster_network_ipv4] + [cluster_network_ipv6] %}
{% set service_networks = [service_network_ipv4] + [service_network_ipv6] %}
{% set baremetal_cidrs = baremetal_cidrs + [dualstack_cidr] %}
{% elif ipv6|default(False) or (api_ip is defined and ':' in api_ip) %}
{% set cluster_networks = [cluster_network_ipv6] %}
{% set service_networks = [service_network_ipv6] %}
{% else %}
{% set cluster_networks = [cluster_network_ipv4] %}
{% set service_networks = [service_network_ipv4] %}
{% endif %}

{% set virtual_ctlplanes_nodes = [] %}
{% set virtual_workers_nodes = [] %}
{% if virtual_hub %}
{% for num in range(0, ctlplanes) %}
{% do virtual_ctlplanes_nodes.append({}) %}
{% endfor %}
{% endif %}
{% if virtual_hub and workers > 0 %}
{% for num in range(0, workers) %}
{% do virtual_workers_nodes.append({}) %}
{% endfor %}
{% endif %}
{% set hosts = baremetal_ctlplanes + virtual_ctlplanes_nodes + baremetal_workers + virtual_workers_nodes %}
{% set total_ctlplanes = (baremetal_ctlplanes + virtual_ctlplanes_nodes)|length %}
{% set total_workers = (baremetal_workers + virtual_workers_nodes)|length %}

apiVersion: v1
{% if cpu_partitioning %}
CPUPartitioningMode: AllNodes
{% endif %}
baseDomain: {{ domain }}
compute:
- architecture: amd64
  hyperthreading: Enabled
  name: worker
  replicas: {{ total_workers }}
controlPlane:
  architecture: amd64
  hyperthreading: Enabled
  name: master
  replicas: {{ total_ctlplanes }}
metadata:
  name: {{ cluster }}
networking:
  clusterNetwork:
{% for network in cluster_networks %}
  - cidr: {{ network.cidr }}
    hostPrefix: {{ network.hostPrefix }}
{% endfor %}
  machineNetwork:
{% for network in baremetal_cidrs %}
  - cidr: {{ network }}
{% endfor %}
  networkType: {{ network_type|default("OVNKubernetes") }}
  serviceNetwork:
{% for network in service_networks %}
  - {{ network }}
{% endfor %}
platform:
{% if hosts|length == 1 %}
  none: {}
{% else %}
  baremetal:
    apiVips:
    - {{ api_ip }}
    hosts:
{% for host in hosts %}
{% set role = 'ctlplane' if loop.index0 < total_ctlplanes else 'worker' %}
    - name: {{ host['name']|default("%s-%s-%s" % (cluster, role, loop.index0|string)) }}
{% if 'mac' in host %}
      bootMACAddress: {{ host['mac'] }}
{% endif %}
{% endfor %}
    ingressVips:
    - {{ ingress_ip }}
{% endif %}
{% if cas %}
additionalTrustBundle: |
{% for ca in cas %}
 {{ ca | certificate | replace('\n', '\n ') }}
{% endfor %}
{% endif %}
{% if disconnected or disconnected_url != None %}
imageContentSources:
- mirrors:
  - REGISTRY:PORT/openshift-release-dev/ocp-v4.0-art-dev
  - REGISTRY:PORT/openshift/release
  source: {{ 'registry.ci.openshift.org/origin' if okd else 'quay.io/openshift-release-dev/ocp-v4.0-art-dev' }}
- mirrors:
  - REGISTRY:PORT/openshift-release-dev
  source: quay.io/openshift-release-dev
- mirrors:
  - REGISTRY:PORT/{{ 'origin' if okd else 'openshift-release-dev' }}
  source: registry.ci.openshift.org/{{ 'origin' if okd else 'ocp/release' }}
{% endif %}
